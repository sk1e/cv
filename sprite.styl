/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$case_name = 'case';
$case_x = 77px;
$case_y = 0px;
$case_offset_x = -77px;
$case_offset_y = 0px;
$case_width = 69px;
$case_height = 60px;
$case_total_width = 198px;
$case_total_height = 184px;
$case_image = 'sprite.png';
$case = 77px 0px -77px 0px 69px 60px 198px 184px 'sprite.png' 'case';
$computer_name = 'computer';
$computer_x = 63px;
$computer_y = 70px;
$computer_offset_x = -63px;
$computer_offset_y = -70px;
$computer_width = 70px;
$computer_height = 55px;
$computer_total_width = 198px;
$computer_total_height = 184px;
$computer_image = 'sprite.png';
$computer = 63px 70px -63px -70px 70px 55px 198px 184px 'sprite.png' 'computer';
$lamp_name = 'lamp';
$lamp_x = 146px;
$lamp_y = 0px;
$lamp_offset_x = -146px;
$lamp_offset_y = 0px;
$lamp_width = 52px;
$lamp_height = 68px;
$lamp_total_width = 198px;
$lamp_total_height = 184px;
$lamp_image = 'sprite.png';
$lamp = 146px 0px -146px 0px 52px 68px 198px 184px 'sprite.png' 'lamp';
$phone_name = 'phone';
$phone_x = 0px;
$phone_y = 70px;
$phone_offset_x = 0px;
$phone_offset_y = -70px;
$phone_width = 63px;
$phone_height = 62px;
$phone_total_width = 198px;
$phone_total_height = 184px;
$phone_image = 'sprite.png';
$phone = 0px 70px 0px -70px 63px 62px 198px 184px 'sprite.png' 'phone';
$star_name = 'star';
$star_x = 0px;
$star_y = 0px;
$star_offset_x = 0px;
$star_offset_y = 0px;
$star_width = 77px;
$star_height = 70px;
$star_total_width = 198px;
$star_total_height = 184px;
$star_image = 'sprite.png';
$star = 0px 0px 0px 0px 77px 70px 198px 184px 'sprite.png' 'star';
$user_name = 'user';
$user_x = 0px;
$user_y = 132px;
$user_offset_x = 0px;
$user_offset_y = -132px;
$user_width = 65px;
$user_height = 52px;
$user_total_width = 198px;
$user_total_height = 184px;
$user_image = 'sprite.png';
$user = 0px 132px 0px -132px 65px 52px 198px 184px 'sprite.png' 'user';
$spritesheet_width = 198px;
$spritesheet_height = 184px;
$spritesheet_image = 'sprite.png';
$spritesheet_sprites = $case $computer $lamp $phone $star $user;
$spritesheet = 198px 184px 'sprite.png' $spritesheet_sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
